import pytest

from Main import parse_input, key, find_path, expand_map

raw_test_data = [
    '1163751742',
    '1381373672',
    '2136511328',
    '3694931569',
    '7463417111',
    '1319128137',
    '1359912421',
    '3125421639',
    '1293138521',
    '2311944581'
]


def test_parse_input():
    data = parse_input(raw_test_data)
    assert data == [[1, 1, 6, 3, 7, 5, 1, 7, 4, 2],
                    [1, 3, 8, 1, 3, 7, 3, 6, 7, 2],
                    [2, 1, 3, 6, 5, 1, 1, 3, 2, 8],
                    [3, 6, 9, 4, 9, 3, 1, 5, 6, 9],
                    [7, 4, 6, 3, 4, 1, 7, 1, 1, 1],
                    [1, 3, 1, 9, 1, 2, 8, 1, 3, 7],
                    [1, 3, 5, 9, 9, 1, 2, 4, 2, 1],
                    [3, 1, 2, 5, 4, 2, 1, 6, 3, 9],
                    [1, 2, 9, 3, 1, 3, 8, 5, 2, 1],
                    [2, 3, 1, 1, 9, 4, 4, 5, 8, 1]]


def get_test_data():
    return [[1, 1, 6, 3, 7, 5, 1, 7, 4, 2],
            [1, 3, 8, 1, 3, 7, 3, 6, 7, 2],
            [2, 1, 3, 6, 5, 1, 1, 3, 2, 8],
            [3, 6, 9, 4, 9, 3, 1, 5, 6, 9],
            [7, 4, 6, 3, 4, 1, 7, 1, 1, 1],
            [1, 3, 1, 9, 1, 2, 8, 1, 3, 7],
            [1, 3, 5, 9, 9, 1, 2, 4, 2, 1],
            [3, 1, 2, 5, 4, 2, 1, 6, 3, 9],
            [1, 2, 9, 3, 1, 3, 8, 5, 2, 1],
            [2, 3, 1, 1, 9, 4, 4, 5, 8, 1]]


@pytest.mark.parametrize("test_row, test_col, expected", [
    (1, 2, '1-2'),
    (6, 3, '6-3'),
    (9, 0, '9-0'),
    (3, 3, '3-3'),
    (0, 0, '0-0')
])
def test_key(test_row, test_col, expected):
    data = key(test_row, test_col)
    assert data == expected


def test_find_path():
    data = find_path(get_test_data())
    assert data == 40


def test_expand_map():
    data = expand_map(get_test_data())
    assert data == [[1, 1, 6, 3, 7, 5, 1, 7, 4, 2, 2, 2, 7, 4, 8, 6, 2, 8, 5, 3],
                    [1, 3, 8, 1, 3, 7, 3, 6, 7, 2, 2, 4, 9, 2, 4, 8, 4, 7, 8, 3],
                    [2, 1, 3, 6, 5, 1, 1, 3, 2, 8, 3, 2, 4, 7, 6, 2, 2, 4, 3, 9],
                    [3, 6, 9, 4, 9, 3, 1, 5, 6, 9, 4, 7, 1, 5, 1, 4, 2, 6, 7, 1],
                    [7, 4, 6, 3, 4, 1, 7, 1, 1, 1, 8, 5, 7, 4, 5, 2, 8, 2, 2, 2],
                    [1, 3, 1, 9, 1, 2, 8, 1, 3, 7, 2, 4, 2, 1, 2, 3, 9, 2, 4, 8],
                    [1, 3, 5, 9, 9, 1, 2, 4, 2, 1, 2, 4, 6, 1, 1, 2, 3, 5, 3, 2],
                    [3, 1, 2, 5, 4, 2, 1, 6, 3, 9, 4, 2, 3, 6, 5, 3, 2, 7, 4, 1],
                    [1, 2, 9, 3, 1, 3, 8, 5, 2, 1, 2, 3, 1, 4, 2, 4, 9, 6, 3, 2],
                    [2, 3, 1, 1, 9, 4, 4, 5, 8, 1, 3, 4, 2, 2, 1, 5, 5, 6, 9, 2],
                    [2, 2, 7, 4, 8, 6, 2, 8, 5, 3, 3, 3, 8, 5, 9, 7, 3, 9, 6, 4],
                    [2, 4, 9, 2, 4, 8, 4, 7, 8, 3, 3, 5, 1, 3, 5, 9, 5, 8, 9, 4],
                    [3, 2, 4, 7, 6, 2, 2, 4, 3, 9, 4, 3, 5, 8, 7, 3, 3, 5, 4, 1],
                    [4, 7, 1, 5, 1, 4, 2, 6, 7, 1, 5, 8, 2, 6, 2, 5, 3, 7, 8, 2],
                    [8, 5, 7, 4, 5, 2, 8, 2, 2, 2, 9, 6, 8, 5, 6, 3, 9, 3, 3, 3],
                    [2, 4, 2, 1, 2, 3, 9, 2, 4, 8, 3, 5, 3, 2, 3, 4, 1, 3, 5, 9],
                    [2, 4, 6, 1, 1, 2, 3, 5, 3, 2, 3, 5, 7, 2, 2, 3, 4, 6, 4, 3],
                    [4, 2, 3, 6, 5, 3, 2, 7, 4, 1, 5, 3, 4, 7, 6, 4, 3, 8, 5, 2],
                    [2, 3, 1, 4, 2, 4, 9, 6, 3, 2, 3, 4, 2, 5, 3, 5, 1, 7, 4, 3],
                    [3, 4, 2, 2, 1, 5, 5, 6, 9, 2, 4, 5, 3, 3, 2, 6, 6, 7, 1, 3]]


def test_expand_minimap():
    data = expand_map([[8]], n_blocks=5)
    assert data == [[8, 9, 1, 2, 3],
                    [9, 1, 2, 3, 4],
                    [1, 2, 3, 4, 5],
                    [2, 3, 4, 5, 6],
                    [3, 4, 5, 6, 7]]
