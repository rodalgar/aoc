import pytest

from Main import parse_input, execute, Instruction

test_raw_data = [
    'noop',
    'addx 3',
    'addx -5'
]

test_large_raw_data = [
    'addx 15',
    'addx -11',
    'addx 6',
    'addx -3',
    'addx 5',
    'addx -1',
    'addx -8',
    'addx 13',
    'addx 4',
    'noop',
    'addx -1',
    'addx 5',
    'addx -1',
    'addx 5',
    'addx -1',
    'addx 5',
    'addx -1',
    'addx 5',
    'addx -1',
    'addx -35',
    'addx 1',
    'addx 24',
    'addx -19',
    'addx 1',
    'addx 16',
    'addx -11',
    'noop',
    'noop',
    'addx 21',
    'addx -15',
    'noop',
    'noop',
    'addx -3',
    'addx 9',
    'addx 1',
    'addx -3',
    'addx 8',
    'addx 1',
    'addx 5',
    'noop',
    'noop',
    'noop',
    'noop',
    'noop',
    'addx -36',
    'noop',
    'addx 1',
    'addx 7',
    'noop',
    'noop',
    'noop',
    'addx 2',
    'addx 6',
    'noop',
    'noop',
    'noop',
    'noop',
    'noop',
    'addx 1',
    'noop',
    'noop',
    'addx 7',
    'addx 1',
    'noop',
    'addx -13',
    'addx 13',
    'addx 7',
    'noop',
    'addx 1',
    'addx -33',
    'noop',
    'noop',
    'noop',
    'addx 2',
    'noop',
    'noop',
    'noop',
    'addx 8',
    'noop',
    'addx -1',
    'addx 2',
    'addx 1',
    'noop',
    'addx 17',
    'addx -9',
    'addx 1',
    'addx 1',
    'addx -3',
    'addx 11',
    'noop',
    'noop',
    'addx 1',
    'noop',
    'addx 1',
    'noop',
    'noop',
    'addx -13',
    'addx -19',
    'addx 1',
    'addx 3',
    'addx 26',
    'addx -30',
    'addx 12',
    'addx -1',
    'addx 3',
    'addx 1',
    'noop',
    'noop',
    'noop',
    'addx -9',
    'addx 18',
    'addx 1',
    'addx 2',
    'noop',
    'noop',
    'addx 9',
    'noop',
    'noop',
    'noop',
    'addx -1',
    'addx 2',
    'addx -37',
    'addx 1',
    'addx 3',
    'noop',
    'addx 15',
    'addx -21',
    'addx 22',
    'addx -6',
    'addx 1',
    'noop',
    'addx 2',
    'addx 1',
    'noop',
    'addx -10',
    'noop',
    'noop',
    'addx 20',
    'addx 1',
    'addx 2',
    'addx 2',
    'addx -6',
    'addx -11',
    'noop',
    'noop',
    'noop'
]


def get_test_data():
    return [(Instruction(code=1, cycles_needed=1, desc='NOOP'), None),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), 3),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), -5)]


def get_large_test_data():
    return [(Instruction(code=2, cycles_needed=2, desc='ADDX'), 15),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), -11),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), 6),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), -3),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), 5),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), -1),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), -8),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), 13),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), 4),
            (Instruction(code=1, cycles_needed=1, desc='NOOP'), None),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), -1),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), 5),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), -1),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), 5),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), -1),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), 5),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), -1),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), 5),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), -1),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), -35),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), 1),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), 24),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), -19),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), 1),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), 16),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), -11),
            (Instruction(code=1, cycles_needed=1, desc='NOOP'), None),
            (Instruction(code=1, cycles_needed=1, desc='NOOP'), None),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), 21),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), -15),
            (Instruction(code=1, cycles_needed=1, desc='NOOP'), None),
            (Instruction(code=1, cycles_needed=1, desc='NOOP'), None),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), -3),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), 9),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), 1),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), -3),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), 8),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), 1),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), 5),
            (Instruction(code=1, cycles_needed=1, desc='NOOP'), None),
            (Instruction(code=1, cycles_needed=1, desc='NOOP'), None),
            (Instruction(code=1, cycles_needed=1, desc='NOOP'), None),
            (Instruction(code=1, cycles_needed=1, desc='NOOP'), None),
            (Instruction(code=1, cycles_needed=1, desc='NOOP'), None),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), -36),
            (Instruction(code=1, cycles_needed=1, desc='NOOP'), None),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), 1),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), 7),
            (Instruction(code=1, cycles_needed=1, desc='NOOP'), None),
            (Instruction(code=1, cycles_needed=1, desc='NOOP'), None),
            (Instruction(code=1, cycles_needed=1, desc='NOOP'), None),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), 2),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), 6),
            (Instruction(code=1, cycles_needed=1, desc='NOOP'), None),
            (Instruction(code=1, cycles_needed=1, desc='NOOP'), None),
            (Instruction(code=1, cycles_needed=1, desc='NOOP'), None),
            (Instruction(code=1, cycles_needed=1, desc='NOOP'), None),
            (Instruction(code=1, cycles_needed=1, desc='NOOP'), None),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), 1),
            (Instruction(code=1, cycles_needed=1, desc='NOOP'), None),
            (Instruction(code=1, cycles_needed=1, desc='NOOP'), None),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), 7),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), 1),
            (Instruction(code=1, cycles_needed=1, desc='NOOP'), None),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), -13),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), 13),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), 7),
            (Instruction(code=1, cycles_needed=1, desc='NOOP'), None),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), 1),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), -33),
            (Instruction(code=1, cycles_needed=1, desc='NOOP'), None),
            (Instruction(code=1, cycles_needed=1, desc='NOOP'), None),
            (Instruction(code=1, cycles_needed=1, desc='NOOP'), None),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), 2),
            (Instruction(code=1, cycles_needed=1, desc='NOOP'), None),
            (Instruction(code=1, cycles_needed=1, desc='NOOP'), None),
            (Instruction(code=1, cycles_needed=1, desc='NOOP'), None),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), 8),
            (Instruction(code=1, cycles_needed=1, desc='NOOP'), None),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), -1),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), 2),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), 1),
            (Instruction(code=1, cycles_needed=1, desc='NOOP'), None),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), 17),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), -9),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), 1),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), 1),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), -3),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), 11),
            (Instruction(code=1, cycles_needed=1, desc='NOOP'), None),
            (Instruction(code=1, cycles_needed=1, desc='NOOP'), None),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), 1),
            (Instruction(code=1, cycles_needed=1, desc='NOOP'), None),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), 1),
            (Instruction(code=1, cycles_needed=1, desc='NOOP'), None),
            (Instruction(code=1, cycles_needed=1, desc='NOOP'), None),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), -13),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), -19),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), 1),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), 3),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), 26),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), -30),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), 12),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), -1),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), 3),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), 1),
            (Instruction(code=1, cycles_needed=1, desc='NOOP'), None),
            (Instruction(code=1, cycles_needed=1, desc='NOOP'), None),
            (Instruction(code=1, cycles_needed=1, desc='NOOP'), None),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), -9),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), 18),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), 1),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), 2),
            (Instruction(code=1, cycles_needed=1, desc='NOOP'), None),
            (Instruction(code=1, cycles_needed=1, desc='NOOP'), None),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), 9),
            (Instruction(code=1, cycles_needed=1, desc='NOOP'), None),
            (Instruction(code=1, cycles_needed=1, desc='NOOP'), None),
            (Instruction(code=1, cycles_needed=1, desc='NOOP'), None),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), -1),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), 2),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), -37),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), 1),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), 3),
            (Instruction(code=1, cycles_needed=1, desc='NOOP'), None),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), 15),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), -21),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), 22),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), -6),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), 1),
            (Instruction(code=1, cycles_needed=1, desc='NOOP'), None),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), 2),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), 1),
            (Instruction(code=1, cycles_needed=1, desc='NOOP'), None),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), -10),
            (Instruction(code=1, cycles_needed=1, desc='NOOP'), None),
            (Instruction(code=1, cycles_needed=1, desc='NOOP'), None),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), 20),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), 1),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), 2),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), 2),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), -6),
            (Instruction(code=2, cycles_needed=2, desc='ADDX'), -11),
            (Instruction(code=1, cycles_needed=1, desc='NOOP'), None),
            (Instruction(code=1, cycles_needed=1, desc='NOOP'), None),
            (Instruction(code=1, cycles_needed=1, desc='NOOP'), None)]


@pytest.mark.parametrize("test_data, expected", [
    (test_raw_data, get_test_data()),
    (test_large_raw_data, get_large_test_data())
])
def test_parse_input(test_data, expected):
    data = parse_input(test_data)
    assert data == expected


@pytest.mark.parametrize("test_data, expected", [
    (get_test_data(), -1),
    (get_large_test_data(), 17)
])
def test_execute_regx_value(test_data, expected):
    data, _, _ = execute(test_data)
    assert data == expected


def test_execute_extractions():
    _, extractions, _ = execute(get_large_test_data(), [20, 60, 100, 140, 180, 220])
    assert extractions == [(20, 21), (60, 19), (100, 18), (140, 21), (180, 16), (220, 18)]


def test_execute_CRT():
    _, _, CRT = execute(get_large_test_data())
    assert CRT == [
        '##..##..##..##..##..##..##..##..##..##..',
        '###...###...###...###...###...###...###.',
        '####....####....####....####....####....',
        '#####.....#####.....#####.....#####.....',
        '######......######......######......####',
        '#######.......#######.......#######.....'
    ]
