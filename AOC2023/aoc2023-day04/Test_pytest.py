import pytest

from Main import Card, parse_input, calculate_matches, calculate_points, part1, part2

test_raw_data = [
    'Card 1: 41 48 83 86 17 | 83 86  6 31 17  9 48 53',
    'Card 2: 13 32 20 16 61 | 61 30 68 82 17 32 24 19',
    'Card 3:  1 21 53 59 44 | 69 82 63 72 16 21 14  1',
    'Card 4: 41 92 73 84 69 | 59 84 76 51 58  5 54 83',
    'Card 5: 87 83 26 28 32 | 88 30 70 12 93 22 82 36',
    'Card 6: 31 18 13 56 72 | 74 77 10 23 35 67 36 11'
]


def get_test_data():
    return [(1, [41, 48, 83, 86, 17], [83, 86, 6, 31, 17, 9, 48, 53]),
            (2, [13, 32, 20, 16, 61], [61, 30, 68, 82, 17, 32, 24, 19]),
            (3, [1, 21, 53, 59, 44], [69, 82, 63, 72, 16, 21, 14, 1]),
            (4, [41, 92, 73, 84, 69], [59, 84, 76, 51, 58, 5, 54, 83]),
            (5, [87, 83, 26, 28, 32], [88, 30, 70, 12, 93, 22, 82, 36]),
            (6, [31, 18, 13, 56, 72], [74, 77, 10, 23, 35, 67, 36, 11])]


def test_parse_input():
    data = parse_input(test_raw_data)
    assert data == [(1, [41, 48, 83, 86, 17], [83, 86, 6, 31, 17, 9, 48, 53]),
                    (2, [13, 32, 20, 16, 61], [61, 30, 68, 82, 17, 32, 24, 19]),
                    (3, [1, 21, 53, 59, 44], [69, 82, 63, 72, 16, 21, 14, 1]),
                    (4, [41, 92, 73, 84, 69], [59, 84, 76, 51, 58, 5, 54, 83]),
                    (5, [87, 83, 26, 28, 32], [88, 30, 70, 12, 93, 22, 82, 36]),
                    (6, [31, 18, 13, 56, 72], [74, 77, 10, 23, 35, 67, 36, 11])]


@pytest.mark.parametrize("card, expected", [
    ((1, [41, 48, 83, 86, 17], [83, 86, 6, 31, 17, 9, 48, 53]), 4),
    ((2, [13, 32, 20, 16, 61], [61, 30, 68, 82, 17, 32, 24, 19]), 2),
    ((3, [1, 21, 53, 59, 44], [69, 82, 63, 72, 16, 21, 14, 1]), 2),
    ((4, [41, 92, 73, 84, 69], [59, 84, 76, 51, 58, 5, 54, 83]), 1),
    ((5, [87, 83, 26, 28, 32], [88, 30, 70, 12, 93, 22, 82, 36]), 0),
    ((6, [31, 18, 13, 56, 72], [74, 77, 10, 23, 35, 67, 36, 11]), 0)
])
def test_calculate_matches(card: Card, expected: int):
    data = calculate_matches(card)
    assert data == expected


@pytest.mark.parametrize("card, expected", [
    ((1, [41, 48, 83, 86, 17], [83, 86, 6, 31, 17, 9, 48, 53]), 8),
    ((2, [13, 32, 20, 16, 61], [61, 30, 68, 82, 17, 32, 24, 19]), 2),
    ((3, [1, 21, 53, 59, 44], [69, 82, 63, 72, 16, 21, 14, 1]), 2),
    ((4, [41, 92, 73, 84, 69], [59, 84, 76, 51, 58, 5, 54, 83]), 1),
    ((5, [87, 83, 26, 28, 32], [88, 30, 70, 12, 93, 22, 82, 36]), 0),
    ((6, [31, 18, 13, 56, 72], [74, 77, 10, 23, 35, 67, 36, 11]), 0)
])
def test_calculate_points(card: Card, expected: int):
    data = calculate_points(card)
    assert data == expected


def test_part1():
    data = part1(get_test_data())
    assert data == 13


def test_part2():
    data = part2(get_test_data())
    assert data == 30
